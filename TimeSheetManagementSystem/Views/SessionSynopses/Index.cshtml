<div class="panel  panel-primary">
    <div class="panel-heading">
        Manage User
        <div class="btn-group pull-right">
            <a asp-action="Create" asp-controller="SessionSynopses" class="btn btn-default btn-group-lg ">Add</a>
        </div>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-12">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Session Synopsis Name</th>
                            <th>Visibility</th>
                            <th>Created By</th>
                            <th>Updated By</th>
                            <th>&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="userTableBody"></tbody>
                </table>

            </div>
        </div>

    </div><!-- end of Panel Body -->
</div><!-- end of Main Panel -->

<script>
    var ssList;
    var response = true;
    
    
    $(document).ready(function () {
       loadSessionData();
    })

    function loadSessionData() {
        //Note: jQuery.ajax(..) is also often written is $.ajax(..)
        //console.log("1");
        jQuery.ajax({
            url: '/Api/SessionSynopses',
            method: 'GET',
            dataType: 'json',
            cache: false,
        }).done(function (data, textStatus, jqXHR) {
            //This done method will
            //The (data) input parameter automatically captures the response from the
            //GET() method

            //I usually use the following code
            //to inspect the returned result captured by the data input parameter
            //from the web server.
            //console.log(data);

            //After inspecting the data object with the console.log
            //I have clear picture of the structure and used
            //the following variable to represent the response.d
            var sessionSynopsesList = data;
            ssList = data;
            var isVisible = '';
            var sessionSynopsesName = '';
            var createdBy = '';
            var updatedBy = '';
            var $tableElement = null;
            var $cellElement = null;
            var $rowElement = null;
            //-------- Find the table element -----------
            //I am using the $tableElement variable
            //to represent the found HTML element which has a matching id of userTableBody
            $tableBodyElement = $('#userTableBody');
            $tableBodyElement.empty();
            //I want to build rows and cells (using tr and td HTML elements) so that
            //I can display user id, full name, email, user name (staff id) and role information
            //within the HTML table element,userTableBody. Recall that, I have already asked the
            //$tableBodyElement variable to represent (reference) the table element.

            //-------- Begin creating <tr> and <td> HTML element ------
            /*
             <th>Session Synopsis Name</th>
             <th>Visibility</th>
             <th>Created By</th>
             <th>Updated By</th>
             <th>&nbsp;</th>
             */
            for (index = 0; index < sessionSynopsesList.length; index++) {

                sessionSynopses = sessionSynopsesList[index];
                createdBy = sessionSynopses.createdBy;
                updatedBy = sessionSynopses.updatedBy;
                isVisible = sessionSynopses.isVisible;
                sessionSypnosisId = sessionSynopses.sessionSypnosisId;
                sessionSypnosisName = sessionSynopses.sessionSypnosisName;

                //Create rows
                $rowElement = $('<tr></tr>');
                $cellElement = $('<td></td>', { text: sessionSypnosisName });
                $rowElement.append($cellElement);
                if (isVisible == "true" || isVisible == true) {
                    $cellElement = $('<td><span class="glyphicon glyphicon-ok"></span></td>');
                }
                else {
                    $cellElement = $('<td><span class="glyphicon glyphicon-remove"></span></td>');

                }
                $rowElement.append($cellElement);
                $cellElement = $('<td></td>', { text: createdBy });
                $rowElement.append($cellElement);
                $cellElement = $('<td></td>', { text: updatedBy });
                $rowElement.append($cellElement);
                //$cellElement = $('<td></td>', { : "<button>Edit Session Sypnosis Info</button>" });
                //$rowElement.append($cellElement);

                //Create the 6th cell element.
                //Also, create an additional hyperlink element which will
                //look like a button due to the Bootstrap class.
                //This <a> hyperlink element also need to have 1 important feature:
                //When it is clicked, it will tell the web browser to request for the UserManager controller's
                //Update action.
                //and at the same time pass a QueryString data value of the respective user id.

                //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                $hyperLinkElement = $('<a>Update Session Synopsis</a>').attr('href', '/SessionSynopses/Update/' + sessionSypnosisId);
                $hyperLinkElement.addClass('btn btn-primary');
                //The $hyperLinkElement eventually represents (references) a HTML element which is:
                //<a href="UserManager/Update/<user id>" class="btn btn-primary" >Update User</a>
                //-----------------Using jQuery() to creating the 3rd cell for the row----------------------
                $cellElement = $('<td></td>');
                //-----------------Add the previous created hyperlink element, $hyperLinkElement
                //                 into the newly created 6th cell.
                //As a result, $cellElement references an element defined by:
                //<td><<a href="UpdateUser/<user id>" class="btn btn-primary" >Update User</a></td>
                $cellElement.append($hyperLinkElement);

                //---------------Add the 6th cell into the row represented by the $rowElement
                $rowElement.append($cellElement);
                //Insert the $rowElement into the table element represented by $tableElement.
                $tableBodyElement.append($rowElement);
                //----End of creating one row to display one user by using <tr> and <td> HTML element ---
                //       Proceed to the next user object in the userList Array.
            }//end of for loop.




        }//end of JavaScript anonymous function
        )//end of the done() method;
    }//end of loadSessionData();


    setInterval(function () { loadSessionData() }, 3000);

    

</script>
